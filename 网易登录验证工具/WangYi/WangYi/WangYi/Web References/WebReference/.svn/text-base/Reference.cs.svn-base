//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:2.0.50727.5485
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 2.0.50727.5485 版自动生成。
// 
#pragma warning disable 1591

namespace WangYi.WebReference {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="QuestionReceiverSoap", Namespace="http://tempuri.org/")]
    public partial class QuestionReceiver : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback receiveQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveQuestion2OperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveMobQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback receiveScriptQuestionOperationCompleted;
        
        private System.Threading.SendOrPostCallback correctAnswerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public QuestionReceiver() {
            this.Url = global::WangYi.Properties.Settings.Default.WangYi_WebReference_QuestionReceiver;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event receiveQuestionCompletedEventHandler receiveQuestionCompleted;
        
        /// <remarks/>
        public event receiveQuestion2CompletedEventHandler receiveQuestion2Completed;
        
        /// <remarks/>
        public event receiveMobQuestionCompletedEventHandler receiveMobQuestionCompleted;
        
        /// <remarks/>
        public event receiveScriptQuestionCompletedEventHandler receiveScriptQuestionCompleted;
        
        /// <remarks/>
        public event correctAnswerCompletedEventHandler correctAnswerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/receiveQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string receiveQuestion(string orderNO, string gameId, int questionType, string question, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] questionPic) {
            object[] results = this.Invoke("receiveQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveQuestionAsync(string orderNO, string gameId, int questionType, string question, byte[] questionPic) {
            this.receiveQuestionAsync(orderNO, gameId, questionType, question, questionPic, null);
        }
        
        /// <remarks/>
        public void receiveQuestionAsync(string orderNO, string gameId, int questionType, string question, byte[] questionPic, object userState) {
            if ((this.receiveQuestionOperationCompleted == null)) {
                this.receiveQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveQuestionOperationCompleted);
            }
            this.InvokeAsync("receiveQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic}, this.receiveQuestionOperationCompleted, userState);
        }
        
        private void OnreceiveQuestionOperationCompleted(object arg) {
            if ((this.receiveQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveQuestionCompleted(this, new receiveQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/receiveQuestion2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string receiveQuestion2(string orderNO, string gameId, int questionType, string question, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] questionPic, int expiredSeconds) {
            object[] results = this.Invoke("receiveQuestion2", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveQuestion2Async(string orderNO, string gameId, int questionType, string question, byte[] questionPic, int expiredSeconds) {
            this.receiveQuestion2Async(orderNO, gameId, questionType, question, questionPic, expiredSeconds, null);
        }
        
        /// <remarks/>
        public void receiveQuestion2Async(string orderNO, string gameId, int questionType, string question, byte[] questionPic, int expiredSeconds, object userState) {
            if ((this.receiveQuestion2OperationCompleted == null)) {
                this.receiveQuestion2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveQuestion2OperationCompleted);
            }
            this.InvokeAsync("receiveQuestion2", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds}, this.receiveQuestion2OperationCompleted, userState);
        }
        
        private void OnreceiveQuestion2OperationCompleted(object arg) {
            if ((this.receiveQuestion2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveQuestion2Completed(this, new receiveQuestion2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/receiveMobQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string receiveMobQuestion(string orderNO, string gameId, int questionType, string question, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] questionPic, int expiredSeconds, string callback) {
            object[] results = this.Invoke("receiveMobQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds,
                        callback});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveMobQuestionAsync(string orderNO, string gameId, int questionType, string question, byte[] questionPic, int expiredSeconds, string callback) {
            this.receiveMobQuestionAsync(orderNO, gameId, questionType, question, questionPic, expiredSeconds, callback, null);
        }
        
        /// <remarks/>
        public void receiveMobQuestionAsync(string orderNO, string gameId, int questionType, string question, byte[] questionPic, int expiredSeconds, string callback, object userState) {
            if ((this.receiveMobQuestionOperationCompleted == null)) {
                this.receiveMobQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveMobQuestionOperationCompleted);
            }
            this.InvokeAsync("receiveMobQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds,
                        callback}, this.receiveMobQuestionOperationCompleted, userState);
        }
        
        private void OnreceiveMobQuestionOperationCompleted(object arg) {
            if ((this.receiveMobQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveMobQuestionCompleted(this, new receiveMobQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/receiveScriptQuestion", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string receiveScriptQuestion(string orderNO, string gameId, int questionType, string question, string questionPic, int expiredSeconds) {
            object[] results = this.Invoke("receiveScriptQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void receiveScriptQuestionAsync(string orderNO, string gameId, int questionType, string question, string questionPic, int expiredSeconds) {
            this.receiveScriptQuestionAsync(orderNO, gameId, questionType, question, questionPic, expiredSeconds, null);
        }
        
        /// <remarks/>
        public void receiveScriptQuestionAsync(string orderNO, string gameId, int questionType, string question, string questionPic, int expiredSeconds, object userState) {
            if ((this.receiveScriptQuestionOperationCompleted == null)) {
                this.receiveScriptQuestionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreceiveScriptQuestionOperationCompleted);
            }
            this.InvokeAsync("receiveScriptQuestion", new object[] {
                        orderNO,
                        gameId,
                        questionType,
                        question,
                        questionPic,
                        expiredSeconds}, this.receiveScriptQuestionOperationCompleted, userState);
        }
        
        private void OnreceiveScriptQuestionOperationCompleted(object arg) {
            if ((this.receiveScriptQuestionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.receiveScriptQuestionCompleted(this, new receiveScriptQuestionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/correctAnswer", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string correctAnswer(string orderNO, string gameId, int questionType) {
            object[] results = this.Invoke("correctAnswer", new object[] {
                        orderNO,
                        gameId,
                        questionType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void correctAnswerAsync(string orderNO, string gameId, int questionType) {
            this.correctAnswerAsync(orderNO, gameId, questionType, null);
        }
        
        /// <remarks/>
        public void correctAnswerAsync(string orderNO, string gameId, int questionType, object userState) {
            if ((this.correctAnswerOperationCompleted == null)) {
                this.correctAnswerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncorrectAnswerOperationCompleted);
            }
            this.InvokeAsync("correctAnswer", new object[] {
                        orderNO,
                        gameId,
                        questionType}, this.correctAnswerOperationCompleted, userState);
        }
        
        private void OncorrectAnswerOperationCompleted(object arg) {
            if ((this.correctAnswerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.correctAnswerCompleted(this, new correctAnswerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void receiveQuestionCompletedEventHandler(object sender, receiveQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void receiveQuestion2CompletedEventHandler(object sender, receiveQuestion2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveQuestion2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveQuestion2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void receiveMobQuestionCompletedEventHandler(object sender, receiveMobQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveMobQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveMobQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void receiveScriptQuestionCompletedEventHandler(object sender, receiveScriptQuestionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class receiveScriptQuestionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal receiveScriptQuestionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    public delegate void correctAnswerCompletedEventHandler(object sender, correctAnswerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.5420")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class correctAnswerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal correctAnswerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591